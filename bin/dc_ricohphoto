#! /usr/bin/env python

import sys
import os
import os.path
import string
import datetime

if "--gtk3" in sys.argv or sys.version_info[0] >= 3:  # gtk3
    import gi
    gi.require_version('Gtk','3.0')
    from gi.repository import Gtk as gtk
    pass
else :  # gtk2
    import gobject
    import gtk
    pass

import dg_units
dg_units.units_config("insert_basic_units")


#class dummy(object):
#    pass

## trace symbolic link to find installed directory
#thisfile=sys.modules[dummy.__module__].__file__
#if os.path.islink(thisfile):
#    installedfile=os.readlink(thisfile)
#    if not os.path.isabs(installedfile):
#        installedfile=os.path.join(os.path.dirname(thisfile),installedfile)
#        pass
#    pass
#else:
#    installedfile=thisfile
#    pass

#installeddir=os.path.dirname(installedfile)

#if os.path.exists(os.path.join(installeddir,"../lib/checklist.py")):
#    installeddir=os.path.join(installeddir,"../")
#    pass
#elif os.path.exists(os.path.join(installeddir,"../gui2/lib/checklist.py")):
#    installeddir=os.path.join(installeddir,"../gui2")
#    pass
#
#sys.path.append(installeddir)
#sys.path.append(os.path.join(installeddir,"lib/"))

from datacollect2.dc_value import numericunitsvalue as numericunitsv
from datacollect2.dc_value import stringvalue as stringv
from datacollect2.dc_value import photosvalue as photosv

from datacollect2 import paramdb2 as pdb

from datacollect2.dc_gtksupp import import_widgets
from datacollect2.dc_gtksupp import guistate as create_guistate

from datacollect2.dc_dbus_barcode import dc_dbus_barcode


from datacollect2 import ricohcamera

if "gobject" in sys.modules:  # only for GTK2
    gobject.threads_init()
    pass

import_widgets()


def newsdbdest(param,condition):
    # set parameters if in specimendatabase mode
    
    paramdb["dest"].requestvalstr_sync("specimens/%s_files" % (str(paramdb["specimen"].dcvalue)))
    
    pass

def newfilename(param,condition):
    # set parameters if in specimendatabase mode
    paramdb["reqfilename"].requestvalstr_sync("%s_%s-%%.3d.jpg" % (str(paramdb["specimen"].dcvalue),str(paramdb["date"].dcvalue)))
    pass


def closehandler(widget,event):
    # called with close box
    
    sys.exit(0)
    
    return False

paramdb=pdb.paramdb(None)

paramdb.addparam("specimen",stringv)
paramdb.addparam("perfby",stringv)
paramdb.addparam("date",stringv)
paramdb.addparam("dest",stringv)
paramdb.addparam("reqfilename",stringv)

# auto-set date 
if paramdb["date"].dcvalue.isblank():
    curdate=datetime.datetime.now()
    paramdb["date"].requestvalstr_sync(curdate.isoformat().split("T")[0])
    pass



# command line parameters
argc=1

mode="default"

while argc < len(sys.argv):
    if sys.argv[argc]=="-sdb":
        # specimen database mode
        mode="specimendatabase"
        pass
    elif sys.argv[argc]=="-s":
        # Set specimen
        argc+=1
        paramdb["specimen"].requestvalstr_sync(sys.argv[argc])
        
        pass
    elif sys.argv[argc]=="-h" or sys.argv[argc]=="--help":
        # print usage: 
        print "Usage: ricohphoto [-sdb] [-s <specimen>] [--gtk3]"
        print " "
        print " -sdb enables specimen database mode"
        
        pass 
    elif sys.argv[argc]=="--gtk3":
        pass # handled above, with imports
    elif sys.argv[argc][0]=="-":
        raise ValueError("Unknown argument: %s" % sys.argv[argc])

    argc+=1
    pass
    

# Automatically create/update dest and filename fields
if mode=="specimendatabase":
    paramdb.addnotify("specimen",newsdbdest,pdb.param.NOTIFY_NEWVALUE)
    newsdbdest(None,None)    
    pass
else :
    paramdb["dest"].requestvalstr_sync(os.getcwd()) 
    
    pass

paramdb.addnotify("specimen",newfilename,pdb.param.NOTIFY_NEWVALUE)
paramdb.addnotify("date",newfilename,pdb.param.NOTIFY_NEWVALUE)
newfilename(None,None)
    



guistate=create_guistate(None,paramdb) # can add search directories as additional parameters here [os.path.split(fname)[0]])

# Connect to dbus (barcode reader)
dbuslink=dc_dbus_barcode(paramdb)


ricohwindow=ricohcamera.ricohphotorequest(paramdb,None,gladefile="ricohphoto.glade")
ricohwindow.connect("delete-event",closehandler)


ricohwindow.dc_gui_init(guistate)



ricohwindow.show_all()



gtk.main()
	
